{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\\\u9879\\u76EE\\u5316\\\\my-app\\\\src\\\\components\\\\Board.js\";\nimport React from \"react\";\nimport \"./style.css\";\nimport Square from \"./Square\"; // function Board() {\n//     return (\n//         <div className=\"board\">\n//             <h1>井字棋游戏--React</h1>\n//             <button className=\"btn\"></button>\n//             <button className=\"btn\"></button>\n//             <button className=\"btn\"></button>\n//             <button className=\"btn\"></button>\n//             <button className=\"btn\"></button>\n//             <button className=\"btn\"></button>\n//             <button className=\"btn\"></button>\n//             <button className=\"btn\"></button>\n//             <button className=\"btn\"></button>\n//         </div>\n//     );\n// }\n//\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(\"\"),\n      player: \"x\",\n      winner: \"\",\n      // history:[\n      //     {\n      //         squares: Array(9).fill(\"\"),\n      //         player: \"X\"\n      //     },\n      // ],\n      step: 1,\n      winnerArr: []\n    };\n  }\n\n  render() {\n    let {\n      player,\n      squares,\n      winner\n    } = this.state;\n    let title = \"\";\n\n    if (!winner) {\n      title = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u5F00\\u5C40\\u662F\\uFF1A\", player]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this);\n    } else {\n      title = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u5927\\u5409\\u5927\\u5229\\uFF1A\", winner]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u4E95\\u5B57\\u68CB\\u6E38\\u620F--React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), title, squares.map((el, index) => {\n        return /*#__PURE__*/_jsxDEV(Square, {\n          player: el,\n          changePlayer: () => {\n            this.changePlayer(index);\n          },\n          winnerClass: this.getClassName(index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n  calculateWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return {\n          squares: squares[a],\n          winnerArr: lines[i]\n        };\n      }\n    }\n\n    return null;\n  }\n\n  changePlayer(i) {\n    if (this.state.winner) {\n      return;\n    }\n\n    let squares = [...this.state.squares];\n    let history = this.state.history.slice(0, this.state.step);\n\n    if (squares[i]) {\n      return;\n    }\n\n    let player = this.state.player === \"X\" ? \"O\" : \"X\";\n    squares[i] = this.state.player;\n    history.push({\n      squares,\n      player\n    });\n    this.setState({\n      player,\n      squares,\n      history,\n      step: history.length\n    });\n    let winner = this.calculateWinner(squares);\n\n    if (winner) {\n      this.setState({\n        winner: winner.squares,\n        winnerArr: winner.winnerArr\n      });\n    }\n  }\n\n  getClassName(index) {\n    let {\n      winner,\n      winnerArr\n    } = this.state;\n\n    if (winner) {\n      for (let i = 0; i < 3; i++) {\n        if (winnerArr[i] === index) {\n          return \"winner-square\";\n        }\n      }\n\n      return \"\";\n    } else {\n      return \"\";\n    }\n  } // backTo(i) {\n  //     this.setState((state) => {\n  //         return{\n  //             winner:\"\",\n  //             squares:state.history[i].squares,\n  //             player:state.history[i].player,\n  //             step: i+1,\n  //         };\n  //     });\n  // }\n\n\n}\n\nexport default Board;","map":{"version":3,"sources":["D:/React/项目化/my-app/src/components/Board.js"],"names":["React","Square","Board","Component","constructor","props","state","squares","Array","fill","player","winner","step","winnerArr","render","title","map","el","index","changePlayer","getClassName","calculateWinner","lines","i","length","a","b","c","history","slice","push","setState"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\nimport Square from \"./Square\";\r\n\r\n// function Board() {\r\n//     return (\r\n//         <div className=\"board\">\r\n//             <h1>井字棋游戏--React</h1>\r\n//             <button className=\"btn\"></button>\r\n//             <button className=\"btn\"></button>\r\n//             <button className=\"btn\"></button>\r\n//             <button className=\"btn\"></button>\r\n//             <button className=\"btn\"></button>\r\n//             <button className=\"btn\"></button>\r\n//             <button className=\"btn\"></button>\r\n//             <button className=\"btn\"></button>\r\n//             <button className=\"btn\"></button>\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n\r\nclass Board extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            squares: Array(9).fill(\"\"),\r\n            player:\"x\",\r\n            winner:\"\",\r\n            // history:[\r\n            //     {\r\n            //         squares: Array(9).fill(\"\"),\r\n            //         player: \"X\"\r\n            //     },\r\n            // ],\r\n            step:1,\r\n            winnerArr:[],\r\n        };\r\n    }\r\n\r\n    render() {\r\n        let { player, squares, winner } = this.state;\r\n        let title = \"\";\r\n        if (!winner) {\r\n            title = <p>开局是：{player}</p>;\r\n        } else {\r\n            title = <p>大吉大利：{winner}</p>;\r\n        }\r\n        return (\r\n            <div className=\"board\">\r\n                <h1>井字棋游戏--React</h1>\r\n                {title}\r\n                {squares.map((el, index) => {\r\n                    return (\r\n                        <Square key={index} player={el} changePlayer={() => {this.changePlayer(index);}} winnerClass={this.getClassName(index)}></Square>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    calculateWinner(squares){\r\n        const lines = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n        ];\r\n        for(let i = 0; i < lines.length; i++){\r\n            const[a, b, c] = lines[i];\r\n            if (\r\n                squares[a] && squares[a] === squares [b] && squares[a] === squares[c]\r\n            )\r\n            {\r\n                return{\r\n                    squares:squares[a],\r\n                    winnerArr: lines[i],\r\n                };\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    changePlayer(i){\r\n        if (this.state.winner){\r\n            return;\r\n        }\r\n        let squares = [...this.state.squares];\r\n        let history = this.state.history.slice(0,this.state.step);\r\n        if (squares[i]){\r\n            return;\r\n        }\r\n        let player = this.state.player === \"X\" ? \"O\" : \"X\";\r\n        squares[i] = this.state.player;\r\n        history.push(\r\n            {\r\n                squares,\r\n                player,\r\n            }\r\n        );\r\n        this.setState({\r\n            player,\r\n            squares,\r\n            history,\r\n            step:history.length,\r\n        });\r\n        let winner = this.calculateWinner(squares);\r\n        if (winner){\r\n            this.setState({\r\n                winner:winner.squares,\r\n                winnerArr:winner.winnerArr,\r\n            });\r\n        }\r\n    }\r\n\r\n    getClassName(index){\r\n        let {winner, winnerArr } = this.state;\r\n        if (winner) {\r\n            for (let i = 0; i < 3; i++){\r\n                if (winnerArr[i] === index){\r\n                    return\"winner-square\";\r\n                }\r\n            }\r\n            return\"\";\r\n        }\r\n        else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    // backTo(i) {\r\n    //     this.setState((state) => {\r\n    //         return{\r\n    //             winner:\"\",\r\n    //             squares:state.history[i].squares,\r\n    //             player:state.history[i].player,\r\n    //             step: i+1,\r\n    //         };\r\n    //     });\r\n    // }\r\n}\r\n\r\nexport default Board;\r\n\r\n"]},"metadata":{},"sourceType":"module"}